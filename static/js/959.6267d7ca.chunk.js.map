{"version":3,"file":"static/js/959.6267d7ca.chunk.js","mappings":"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","sources":["components/semester/SemInfo.jsx","components/semester/Courses.jsx","pages/Semester.jsx"],"sourcesContent":["/**\r\n * Semester Page - Sem Info\r\n */\r\n\r\n// Dependencies\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport config from '../../config';\r\n\r\n// MUI\r\nimport { Box, styled, Stack, Divider, Paper, Tooltip, IconButton } from '@mui/material';\r\nimport GitHubIcon from '@mui/icons-material/GitHub';\r\nimport FileDownloadIcon from '@mui/icons-material/FileDownload';\r\nimport AddToDriveIcon from '@mui/icons-material/AddToDrive';\r\n\r\nconst SemInfo = ({ name, credits, numberOfCourses, repoLink, downloadLink, driveLink }) => {\r\n\r\n    const links = [\r\n        {\r\n            title: 'View Repo',\r\n            url: repoLink,\r\n            Icon: GitHubIcon,\r\n        },\r\n        {\r\n            title: 'Download Files',\r\n            url: downloadLink,\r\n            Icon: FileDownloadIcon,\r\n        },\r\n        {\r\n            title: 'View Drive',\r\n            url: driveLink,\r\n            Icon: AddToDriveIcon,\r\n        }\r\n    ];\r\n\r\n    const handleNavigate = (link) => () => {\r\n        window.open(link, '_blank');\r\n    };\r\n\r\n    const LinkItem = ({ title, Icon, url }) => {\r\n        const isUrlPresent = Boolean(url) && typeof url === 'string' && url.length > 0;\r\n        return (\r\n            <Item>\r\n                {isUrlPresent ? (\r\n                    <Tooltip title={title}>\r\n                        <IconButton onClick={handleNavigate(url)}>\r\n                            <Icon />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                ) : (\r\n                    <Tooltip describeChild title='Link not available'>\r\n                        <IconButton>\r\n                            <Icon />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                )\r\n                }\r\n            </Item>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Stack\r\n                direction=\"row\"\r\n                divider={<Divider orientation=\"vertical\" flexItem />}\r\n                spacing={2}\r\n                mb={2}\r\n            >\r\n                <Item>{name}</Item>\r\n                <Item>Total Credits: {credits}</Item>\r\n                <Item>Number of Courses: {numberOfCourses}</Item>\r\n                {links.map((link, index) => (\r\n                    <LinkItem\r\n                        key={index}\r\n                        {...link}\r\n                    />\r\n                ))}\r\n            </Stack>\r\n            <Divider />\r\n        </Container>\r\n    )\r\n};\r\n\r\nconst Container = styled(Box)({\r\n    width: '100%',\r\n    marginTop: '1em',\r\n});\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n    ...theme.typography.body2,\r\n    padding: '0.25em 1em',\r\n    textAlign: 'center',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    color: theme.palette.text.secondary,\r\n    cursor: 'pointer',\r\n    transition: 'all 200ms',\r\n    '&:hover': {\r\n        backgroundColor: config.APP_COLORS.accent,\r\n        color: config.APP_COLORS.dark,\r\n    }\r\n}));\r\n\r\nSemInfo.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    credits: PropTypes.number.isRequired,\r\n    numberOfCourses: PropTypes.number.isRequired,\r\n    repoLink: PropTypes.string.isRequired,\r\n    downloadLink: PropTypes.string.isRequired,\r\n    driveLink: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SemInfo;","/**\r\n * Semester Page - Courses\r\n */\r\n\r\n// Dependencies\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport config from '../../config';\r\n\r\n// MUI\r\nimport { Box, styled, Typography, Accordion, AccordionSummary, AccordionDetails, LinearProgress, Stack, Paper, Divider, IconButton, Tooltip } from '@mui/material';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport GitHubIcon from '@mui/icons-material/GitHub';\r\nimport FileDownloadIcon from '@mui/icons-material/FileDownload';\r\nimport AddToDriveIcon from '@mui/icons-material/AddToDrive';\r\n\r\nconst Courses = ({ courses }) => {\r\n\r\n    const CourseContent = ({ index, name, subjectCode, difficulty, credits, repoLink, downloadLink, driveLink }) => {\r\n\r\n        const difficultyInPercentage = difficulty * 10;\r\n\r\n        const links = [\r\n            {\r\n                title: 'View Repo',\r\n                url: repoLink,\r\n                Icon: GitHubIcon,\r\n            },\r\n            {\r\n                title: 'Download Files',\r\n                url: downloadLink,\r\n                Icon: FileDownloadIcon,\r\n            },\r\n            {\r\n                title: 'View Drive',\r\n                url: driveLink,\r\n                Icon: AddToDriveIcon,\r\n            }\r\n        ];\r\n\r\n        const handleNavigate = (link) => () => {\r\n            window.open(link, '_blank');\r\n        };\r\n\r\n        const LinkItem = ({ title, Icon, url }) => {\r\n            const isUrlPresent = Boolean(url) && typeof url === 'string' && url.length > 0;\r\n            return (\r\n                <Item>\r\n                    {isUrlPresent ? (\r\n                        <Tooltip title={title}>\r\n                            <IconButton onClick={handleNavigate(url)}>\r\n                                <Icon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    ) : (\r\n                        <Tooltip describeChild title='Link not available'>\r\n                            <IconButton>\r\n                                <Icon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    )\r\n                    }\r\n                </Item>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <Accordion>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls={`panel${index}a-content`}\r\n                    id={`panel${index}a-header`}\r\n                >\r\n                    <Typography sx={{ width: '40%', flexShrink: 0, fontSize: '1.2rem' }}>\r\n                        {name}\r\n                    </Typography>\r\n                    <Typography sx={{ color: 'text.secondary' }}>Subject Code: {subjectCode}</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <Stack\r\n                        direction=\"row\"\r\n                        divider={<Divider orientation=\"vertical\" flexItem />}\r\n                        spacing={2}\r\n                    >\r\n                        <Item>Course: {name}</Item>\r\n                        <Item>Code: {subjectCode}</Item>\r\n                        <Item>Credits: {credits}</Item>\r\n                        {links.map((link, index) => (\r\n                            <LinkItem\r\n                                key={index}\r\n                                {...link}\r\n                            />\r\n                        ))}\r\n                    </Stack>\r\n                    <Typography variant='body1' fontSize='1.1rem' my={2}>Subject Difficulty: {difficulty}/10</Typography>\r\n                    <LinearProgress variant='determinate' value={difficultyInPercentage} />\r\n                </AccordionDetails>\r\n            </Accordion>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Typography variant='h2' fontSize='2rem' fontWeight={600} mb={1}>Courses</Typography>\r\n            {courses.map((course, index) => (\r\n                <CourseContent\r\n                    key={index}\r\n                    index={index}\r\n                    {...course}\r\n                />\r\n            ))}\r\n        </Container>\r\n    )\r\n};\r\n\r\nconst Container = styled(Box)({\r\n    marginTop: '1em',\r\n});\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n    ...theme.typography.body2,\r\n    padding: '0.25em 1em',\r\n    textAlign: 'center',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    color: theme.palette.text.secondary,\r\n    cursor: 'pointer',\r\n    transition: 'all 200ms',\r\n    '&:hover': {\r\n        backgroundColor: config.APP_COLORS.accent,\r\n        color: config.APP_COLORS.dark,\r\n    }\r\n}));\r\n\r\nCourses.propTypes = {\r\n    courses: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default Courses;","/**\r\n * Semester Page\r\n */\r\n\r\n// Dependencies\r\nimport React, { useState, useMemo, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Data from '../utils/data';\r\n\r\n// MUI\r\nimport { Box, Divider, styled, Typography } from '@mui/material';\r\n\r\n// Components\r\nimport SemInfo from '../components/semester/SemInfo';\r\nimport Courses from '../components/semester/Courses';\r\n\r\nconst Semester = () => {\r\n    const location = useLocation();\r\n\r\n    const [currentSem, setCurrentSem] = useState(null);\r\n    const [semCourses, setSemCourses] = useState([]);\r\n\r\n    const [semKey, semName] = useMemo(() => {\r\n        const currentLocation = location.pathname.split('/').pop();\r\n        const key = currentLocation.replace('-', '');\r\n        const name = currentLocation.split('-').map((word) => {\r\n            const firstLetterUpperCaseWord = word.charAt(0).toUpperCase() + word.slice(1);\r\n            return firstLetterUpperCaseWord;\r\n        }).join(' ');\r\n        return [key, name];\r\n    }, [location]);\r\n\r\n    useEffect(() => {\r\n        const handleSetCurrentSem = async () => {\r\n            const data = await Data.Semesters.getAllSemesters();\r\n            const currentSemester = data.find((sem) => sem.name === semName);\r\n            setCurrentSem(currentSemester);\r\n        };\r\n        if (!currentSem) handleSetCurrentSem();\r\n    }, [currentSem, semName]);\r\n\r\n    useEffect(() => {\r\n        const handleSetSemCourses = async () => {\r\n            const data = await Data.Semesters.getCoursesOfSemester(semKey);\r\n            setSemCourses(data);\r\n        };\r\n        if (semCourses.length === 0) handleSetSemCourses();\r\n    }, [semCourses, semKey]);\r\n\r\n    return (\r\n        <Main>\r\n            <Typography variant='h1' fontSize='4rem'>{semName}</Typography>\r\n            <Divider />\r\n\r\n            {currentSem ? <SemInfo {...currentSem} /> : <NoSemFound></NoSemFound>}\r\n\r\n            {semCourses.length > 0 ? <Courses courses={semCourses} /> : <NoNotesForSem></NoNotesForSem>}\r\n        </Main>\r\n    )\r\n};\r\n\r\nconst Main = styled(Box)({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: '100%',\r\n    height: '100vh',\r\n    '> *': {\r\n        width: '100%',\r\n    }\r\n});\r\n\r\nconst NoSemFound = styled(Box)({});\r\n\r\nconst NoNotesForSem = styled(Box)({});\r\n\r\nexport default Semester;"],"names":["Container","styled","Box","width","marginTop","Item","Paper","theme","backgroundColor","palette","mode","typography","body2","padding","textAlign","display","alignItems","color","text","secondary","cursor","transition","config","name","credits","numberOfCourses","repoLink","downloadLink","driveLink","links","title","url","Icon","GitHubIcon","FileDownloadIcon","AddToDriveIcon","LinkItem","link","isUrlPresent","Boolean","length","Tooltip","IconButton","onClick","window","open","describeChild","Stack","direction","divider","Divider","orientation","flexItem","spacing","mb","map","index","courses","CourseContent","subjectCode","difficulty","difficultyInPercentage","Accordion","AccordionSummary","expandIcon","ExpandMore","id","Typography","sx","flexShrink","fontSize","AccordionDetails","variant","my","LinearProgress","value","fontWeight","course","Main","flexDirection","justifyContent","height","NoSemFound","NoNotesForSem","location","useLocation","useState","currentSem","setCurrentSem","semCourses","setSemCourses","useMemo","currentLocation","pathname","split","pop","replace","word","charAt","toUpperCase","slice","join","semKey","semName","useEffect","handleSetCurrentSem","Data","data","currentSemester","find","sem","handleSetSemCourses"],"sourceRoot":""}